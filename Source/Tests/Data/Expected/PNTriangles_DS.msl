#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_cbPNTriangles
{
    float4x4 viewProj;
    float4 lightDir;
};

struct main0_out
{
    float2 out_var_TEXCOORD0 [[user(locn0)]];
    float4 gl_Position [[position]];
};

struct main0_in
{
    float3 in_var_POSITION [[attribute(1)]];
    float2 in_var_TEXCOORD [[attribute(8)]];
};

struct main0_patchIn
{
    float3 in_var_CENTER [[attribute(0)]];
    float3 in_var_POSITION3 [[attribute(2)]];
    float3 in_var_POSITION4 [[attribute(3)]];
    float3 in_var_POSITION5 [[attribute(4)]];
    float3 in_var_POSITION6 [[attribute(5)]];
    float3 in_var_POSITION7 [[attribute(6)]];
    float3 in_var_POSITION8 [[attribute(7)]];
    patch_control_point<main0_in> gl_in;
};

[[ patch(triangle, 0) ]] vertex main0_out main0(main0_patchIn patchIn [[stage_in]], constant type_cbPNTriangles& cbPNTriangles [[buffer(0)]], float3 gl_TessCoord [[position_in_patch]])
{
    main0_out out = {};
    float _67 = gl_TessCoord.x * gl_TessCoord.x;
    float _68 = gl_TessCoord.y * gl_TessCoord.y;
    float _69 = gl_TessCoord.z * gl_TessCoord.z;
    float _70 = _67 * 3.0;
    float _71 = _68 * 3.0;
    float _72 = _69 * 3.0;
    out.gl_Position = float4(((((((((((in_var_POSITION[0] * _69) * gl_TessCoord.z) + ((in_var_POSITION[1] * _67) * gl_TessCoord.x)) + ((in_var_POSITION[2] * _68) * gl_TessCoord.y)) + ((patchIn.in_var_POSITION3 * _72) * gl_TessCoord.x)) + ((patchIn.in_var_POSITION4 * gl_TessCoord.z) * _70)) + ((patchIn.in_var_POSITION8 * _72) * gl_TessCoord.y)) + ((patchIn.in_var_POSITION5 * _70) * gl_TessCoord.y)) + ((patchIn.in_var_POSITION7 * gl_TessCoord.z) * _71)) + ((patchIn.in_var_POSITION6 * gl_TessCoord.x) * _71)) + ((((patchIn.in_var_CENTER * 6.0) * gl_TessCoord.z) * gl_TessCoord.x) * gl_TessCoord.y), 1.0) * cbPNTriangles.viewProj;
    out.out_var_TEXCOORD0 = ((in_var_TEXCOORD[0] * gl_TessCoord.z) + (in_var_TEXCOORD[1] * gl_TessCoord.x)) + (in_var_TEXCOORD[2] * gl_TessCoord.y);
    return out;
}

