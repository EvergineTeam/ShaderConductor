#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_cbPS
{
    float lumStrength;
};

struct main0_out
{
    float4 out_var_SV_Target [[color(0)]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_cbPS& cbPS [[buffer(0)]], texture2d<float> colorTex [[texture(0)]], texture2d<float> lumTex [[texture(1)]], texture2d<float> bloomTex [[texture(2)]], sampler pointSampler [[sampler(0)]], sampler linearSampler [[sampler(1)]])
{
    main0_out out = {};
    float4 _43 = colorTex.sample(pointSampler, in.in_var_TEXCOORD0);
    float3 _61 = (_43.xyz * (0.7200000286102294921875 / ((lumTex.sample(pointSampler, float2(0.5)).x * cbPS.lumStrength) + 0.001000000047497451305389404296875))).xyz;
    float3 _65 = (_61 * (float3(1.0) + (_61 * float3(0.666666686534881591796875)))).xyz;
    float3 _70 = (_65 / (float3(1.0) + _65)).xyz + (bloomTex.sample(linearSampler, in.in_var_TEXCOORD0).xyz * 0.60000002384185791015625);
    float4 _71 = float4(_70.x, _70.y, _70.z, _43.w);
    _71.w = 1.0;
    out.out_var_SV_Target = _71;
    return out;
}

